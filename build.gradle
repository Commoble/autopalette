
buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply from: 'https://raw.githubusercontent.com/SizableShrimp/Forge-Class-Remapper/main/classremapper.gradle'

version = "${mod_version}"
group = "commoble.${modid}"
archivesBaseName = "${modid}-${mc_version}"

java.toolchain.languageVersion = JavaLanguageVersion.of(16)

sourceSets
{
	main
	examplemod
	test
}

minecraft {
    mappings channel: 'official', version: "${mappings_version}"    
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'

            mods {
                autopalette {
                    source sourceSets.main
                }
                autopaletteexamplemod { source sourceSets.examplemod }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'

            mods {
                autopalette {
                    source sourceSets.main
                }
                autopaletteexamplemod { source sourceSets.examplemod }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'autopalette', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                modid {
                    source sourceSets.main
                }
                autopaletteexamplemod { source sourceSets.examplemod }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
	// repos for mixin
	jcenter()
	mavenCentral()

}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "${modid}",
            "Specification-Vendor": "Commoble",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"Commoble",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar') 

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
